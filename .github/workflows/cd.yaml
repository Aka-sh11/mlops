name: CD - Deploy to GKE

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
  IMAGE_NAME: iris-api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Configure Docker to use gcloud as credential helper
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build \
          --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" \
          --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest" \
          .

    # Push Docker image to Artifact Registry
    - name: Push Docker image to Artifact Registry
      run: |
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"

    # Get GKE credentials
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
          --zone ${{ env.GKE_ZONE }}

    # Deploy to GKE
    - name: Deploy to GKE
      run: |
        # Replace IMAGE_URL in deployment.yaml
        sed -i "s|IMAGE_URL|${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s/deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        # Wait for deployment to complete
        kubectl rollout status deployment/iris-api
        
        # Get service details
        kubectl get services iris-api-service

    # Print deployment info
    - name: Print deployment information
      run: |
        echo "=== Deployment Summary ==="
        echo "Image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "Cluster: ${{ env.GKE_CLUSTER }}"
        echo "Zone: ${{ env.GKE_ZONE }}"
        echo ""
        echo "=== Pods Status ==="
        kubectl get pods -l app=iris-api
        echo ""
        echo "=== Service Details ==="
        kubectl get service iris-api-service
        echo ""
        echo "Get external IP with: kubectl get service iris-api-service"
