name: CI - Pytest with DVC + CML

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[gcs] dvc-gs pytest

      # 4️⃣ Configure DVC remote (force-add if exists)
      - name: Configure DVC remote
        run: |
          dvc remote add -d -f gcsremote gs://mlops_b
          dvc remote list

      # 5️⃣ Pull DVC artifacts with authentication
      - name: Authenticate and pull DVC artifacts
        run: |
          # Write the service account key to a file
          echo "${{ secrets.GCP_SA_KEY }}" > gcp-key.json
          
          # Export the environment variable so DVC can use it
          export GOOGLE_APPLICATION_CREDENTIALS=gcp-key.json
          
          # Pull data and model from DVC
          dvc pull data/raw/iris.csv.dvc
          dvc pull tmp/model.joblib.dvc
          
          # List files to verify
          ls -R

      # 6️⃣ Run pytest
      - name: Run pytest and save results
        run: |
          pytest -v tests/test_evaluate.py --maxfail=1 --disable-warnings | tee result.log

      # 7️⃣ Post results to PR using CML
      - name: Post pytest results as PR comment
        uses: iterative/setup-cml@v2
        with:
          args: result.log
        env:
          CML_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
